## Oracle
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=demo
spring.datasource.password=123
spring.jpa.generate-ddl=true
#drop & create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
server.port=8888
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle10gDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jackson.serialization.fail-on-empty-beans=false
#spring.jpa.properties.hibernate.globally_quoted_identifiers=true

# App Properties
grokonez.app.jwtSecret=jwtGrokonezSecretKey
grokonez.app.jwtExpiration=86400000

#service-gmail
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=vantan1305@gmail.com
spring.mail.password=Anhtan12
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#spring.mail.username=your_email_address
#spring.mail.password=your_email_password

## MULTIPART (MultipartProperties)
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=20000KB
# Max file size.
spring.servlet.multipart.max-file-size=200MB
# Max Request Size
spring.servlet.multipart.max-request-size=215MB

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory

#upload.path=/D:/Mock/mocks/src/main/resources/images
upload.path = /resources/images


file.upload-dir=/resources/images

#logging.level.org.hibernate.SQL=info
#logging.level.root=INFO
#logging.pattern.console= %d{dd/MM/yyyy HH:mm:ss.SSS} %-5level [%thread] %logger{115} - %msg%n
#logging.file.name=logs/full.log


